{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CountCheckbox = /*#__PURE__*/function () {\n  function CountCheckbox() {\n    _classCallCheck(this, CountCheckbox);\n\n    this.container = document.querySelector('.selected-number');\n    this.number_sel = document.querySelector('.cant-num');\n    console.log(number_sel);\n    this.checkBoxesState = this.container.querySelectorAll('.form-control');\n  }\n\n  _createClass(CountCheckbox, [{\n    key: \"start\",\n    value: function start() {\n      this.addClickEventToChkBxs();\n    }\n  }, {\n    key: \"addClickEventToChkBxs\",\n    value: function addClickEventToChkBxs() {\n      this.checkBoxesState.forEach(function (chb) {\n        chb.addEventListener('click', function () {\n          number_sel.html(document.querySelectorAll('input[type=\"checkbox\"]:checked').length);\n        });\n      });\n    }\n  }]);\n\n  return CountCheckbox;\n}();\n\ndocument.addEventListener('turbolinks:load', function () {\n  var container = document.querySelector('.selected-number');\n\n  if (container == null) {\n    return;\n  }\n\n  new CountCheckbox().start();\n});","map":{"version":3,"sources":["/home/jerker/rifas/app/javascript/js/raffle/count_checkbox.js"],"names":["CountCheckbox","container","document","querySelector","number_sel","console","log","checkBoxesState","querySelectorAll","addClickEventToChkBxs","forEach","chb","addEventListener","html","length","start"],"mappings":";;;;;;IAAMA,a;AACJ,2BAAc;AAAA;;AACZ,SAAKC,SAAL,GAAiBC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAjB;AACA,SAAKC,UAAL,GAAkBF,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAlB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,SAAKG,eAAL,GAAuB,KAAKN,SAAL,CAAeO,gBAAf,CAAgC,eAAhC,CAAvB;AACD;;;;4BAEO;AACN,WAAKC,qBAAL;AACD;;;4CAEuB;AACtB,WAAKF,eAAL,CAAqBG,OAArB,CAA6B,UAAAC,GAAG,EAAI;AAClCA,QAAAA,GAAG,CAACC,gBAAJ,CAAqB,OAArB,EAA8B,YAAM;AAClCR,UAAAA,UAAU,CAACS,IAAX,CAAgBX,QAAQ,CAACM,gBAAT,CAA0B,gCAA1B,EAA4DM,MAA5E;AACD,SAFD;AAGD,OAJD;AAKD;;;;;;AAGHZ,QAAQ,CAACU,gBAAT,CAA0B,iBAA1B,EAA6C,YAAM;AACjD,MAAMX,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AAEA,MAAGF,SAAS,IAAI,IAAhB,EAAsB;AAAE;AAAQ;;AAEhC,MAAID,aAAJ,GAAoBe,KAApB;AACD,CAND","sourcesContent":["class CountCheckbox {\n  constructor() {\n    this.container = document.querySelector('.selected-number')\n    this.number_sel = document.querySelector('.cant-num')\n    console.log(number_sel)\n    this.checkBoxesState = this.container.querySelectorAll('.form-control')\n  }\n\n  start() {\n    this.addClickEventToChkBxs()\n  }\n\n  addClickEventToChkBxs() {\n    this.checkBoxesState.forEach(chb => {\n      chb.addEventListener('click', () => {\n        number_sel.html(document.querySelectorAll('input[type=\"checkbox\"]:checked').length);\n      })\n    })\n  }\n}\n\ndocument.addEventListener('turbolinks:load', () => {\n  const container = document.querySelector('.selected-number')\n\n  if(container == null) { return }\n\n  new CountCheckbox().start()\n})"]},"metadata":{},"sourceType":"module"}